<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.work.blogconsumer.mapper.ConsumerMapper">

    <resultMap id="baseResultMap" type="com.work.blogconsumer.entity.Consumer">
        <id column="ID" property="id" jdbcType="VARCHAR"></id>
        <result column="NAME" property="name" jdbcType="VARCHAR"></result>
        <result column="ACCOUNT" property="account" jdbcType="VARCHAR"></result>
        <result column="PASSWORD" property="password" jdbcType="VARCHAR"></result>
        <result column="GENDER" property="gender" jdbcType="VARCHAR"></result>
        <result column="PHONE" property="phone" jdbcType="VARCHAR"></result>
        <result column="DESCRIPTION" property="description" jdbcType="VARCHAR"></result>
        <result column="STATE" property="state" jdbcType="VARCHAR"></result>
        <result column="CREATE_USER_ID" property="createUserId" jdbcType="VARCHAR"></result>
        <result column="CREATE_USER_NAME" property="createUserName" jdbcType="VARCHAR"></result>
        <result column="CREATE_DATE" property="createDate" jdbcType="TIMESTAMP"></result>
    </resultMap>

    <sql id="base_table">consumer</sql>
    <sql id="base_column">
        ID, `NAME`, ACCOUNT, PASSWORD, GENDER, PHONE, DESCRIPTION, `STATE`, CREATE_USER_ID, CREATE_USER_NAME, CREATE_DATE
    </sql>

    <!--通过主键ID查询Consumer-->
    <select id="findById" parameterType="java.lang.String" resultMap="baseResultMap">
        SELECT
        <include refid="base_column"/>
        FROM
        <include refid="base_table"/>
        WHERE ID=#{id}
    </select>

    <!--创建Consumer-->
    <insert id="insertConsumer" keyColumn="ID" keyProperty="id" parameterType="com.work.blogconsumer.entity.Consumer">
        <selectKey order="BEFORE" resultType="java.lang.String" keyProperty="id">
            SELECT UUID()
        </selectKey>
        INSERT INTO
        <include refid="base_table"/>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            ID,
            <if test="name != null">
                `NAME`,
            </if>
            <if test="account != null">
                ACCOUNT,
            </if>
            <if test="password != null">
                PASSWORD,
            </if>
            <if test="gender != null">
                GENDER,
            </if>
            <if test="phone != null">
                PHONE,
            </if>
            <if test="description != null">
                DESCRIPTION,
            </if>
            <if test="state != null">
                `STATE`,
            </if>
            <if test="createUserId != null">
                CREATE_USER_ID,
            </if>
            <if test="createUserName != null">
                CREATE_USER_NAME,
            </if>
            CREATE_DATE, REVISION,
        </trim>
        <trim prefix="VALUES (" suffix=")" suffixOverrides=",">
            <choose>
                <when test="id != null">
                    #{id},
                </when>
                <otherwise>
                    UUID(),
                </otherwise>
            </choose>
            <if test="name != null">
                #{name},
            </if>
            <if test="account != null">
                #{account},
            </if>
            <if test="password != null">
                #{password},
            </if>
            <if test="gender != null">
                #{gender},
            </if>
            <if test="phone != null">
                #{phone},
            </if>
            <if test="description != null">
                #{description},
            </if>
            <if test="state != null">
                #{state},
            </if>
            <if test="createUserId != null">
                #{createUserId},
            </if>
            <if test="createUserName != null">
                #{createUserName},
            </if>
            NOW(), #{revision},
        </trim>
    </insert>

</mapper>
